# This is a basic workflow to help you get started with Actions
name: CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
  pull_request:
    branches: [main]


  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "deploy"
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env: 
      IMAGE_NAME: app1
      PROJECT_ID: my-project-githubaction

    # Add "id-token" with the intended permissions.
    permissions:
      contents: "read"
      id-token: "write"

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - id: "auth"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v0"
        with:
          # Replace with your Workload Identity Provider Location
          workload_identity_provider: projects/857089065468/locations/global/workloadIdentityPools/gh-pool/providers/gh-provider
          # Replace with your GitHub Service Account
          service_account: github-actions-service-account@my-project-githubaction.iam.gserviceaccount.com

      - name: Build Docker Image 
        run: docker build -t $IMAGE_NAME:latest . 


      - name: Push Docker Image to Artifact Registry
        #env:
        #   GIT_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
        run: |-
          docker tag $IMAGE_NAME:latest us-central1-docker.pkg.dev/$PROJECT_ID/my-repository/$IMAGE_NAME:latest
          docker tag $IMAGE_NAME:latest us-central1-docker.pkg.dev/$PROJECT_ID/my-repository/$IMAGE_NAME
          docker push us-central1-docker.pkg.dev/$PROJECT_ID/my-repositoy/$IMAGE_NAME:latest
          docker push us-central1-docker.pkg.dev/$PROJECT_ID/my-repository/$IMAGE_NAME

  

